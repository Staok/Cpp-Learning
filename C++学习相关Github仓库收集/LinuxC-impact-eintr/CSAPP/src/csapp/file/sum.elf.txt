//unsigned long long bias; // global, object, common
//// global, func, .text
//unsigned long long sum(unsigned long long *a, unsigned long long n) {
//  unsigned long long i, s = 0;
//  for (i = 0;i < n;++i) {
//    s += a[i];
//  }
//  return s + bias;
//}

// count of effective lines
30

// count of section header table lines
3

// begin of sht
// sh_name,sh_addr,sh_ofset,sh_size(lines)
.text,0x0,5,22
.symtab,0x0,27,2
.rel.text,0x0,29,1

// .text section
push   %rbp
mov    %rsp,%rbp
mov    %rdi,-0x18(%rbp)
mov    %rsi,-0x20(%rbp)
movq   $0x0,-0x8(%rbp)
movq   $0x0,-0x10(%rbp)
jmp    3d <sum+0x3d>
mov    -0x10(%rbp),%rax
lea    0x0(,%rax,8),%rdx
mov    -0x18(%rbp),%rax
add    %rdx,%rax
mov    (%rax),%rax
add    %rax,-0x8(%rbp)
addq   $0x1,-0x10(%rbp)
mov    -0x10(%rbp),%rax
cmp    -0x20(%rbp),%rax
jb     1e <sum+0x1e>
mov    0x0000000000000000(%rip),%rdx
mov    -0x8(%rbp),%rax
add    %rdx,%rax
pop    %rbp
ret

// .symtab
// st_name,bind,type,st_shndex,st_value,st_size
sum,STB_GLOBAL,STT_FUNC,.text,0,22
bias,STB_GLOBAL,STT_OBJECT,COMMON,8,8

// .rel.text
// r_row,r_col,type,sym,r_addend
17,7,R_X86_64_PC32,1,-4 // bias
