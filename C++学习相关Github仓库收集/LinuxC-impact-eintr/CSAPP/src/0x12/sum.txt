
sum.o：     文件格式 elf64-x86-64


Disassembly of section .text:

0000000000000000 <sum>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   c:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  13:	00 
  14:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  1b:	00 
  1c:	eb 1f                	jmp    3d <sum+0x3d>
  1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  22:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  29:	00 
  2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2e:	48 01 d0             	add    %rdx,%rax
  31:	48 8b 00             	mov    (%rax),%rax
  34:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  38:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
  3d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
  45:	72 d7                	jb     1e <sum+0x1e>
  47:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 4e <sum+0x4e>
  4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  52:	48 01 d0             	add    %rdx,%rax
  55:	5d                   	pop    %rbp
  56:	c3                   	ret    

Disassembly of section .bss:

0000000000000000 <bias>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	00 47 43             	add    %al,0x43(%rdi)
   3:	43 3a 20             	rex.XB cmp (%r8),%spl
   6:	28 47 4e             	sub    %al,0x4e(%rdi)
   9:	55                   	push   %rbp
   a:	29 20                	sub    %esp,(%rax)
   c:	31 31                	xor    %esi,(%rcx)
   e:	2e 32 2e             	cs xor (%rsi),%ch
  11:	30 00                	xor    %al,(%rax)

Disassembly of section .note.gnu.property:

0000000000000000 <.note.gnu.property>:
   0:	04 00                	add    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	20 00                	and    %al,(%rax)
   6:	00 00                	add    %al,(%rax)
   8:	05 00 00 00 47       	add    $0x47000000,%eax
   d:	4e 55                	rex.WRX push %rbp
   f:	00 02                	add    %al,(%rdx)
  11:	00 01                	add    %al,(%rcx)
  13:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
	...
  1f:	00 01                	add    %al,(%rcx)
  21:	00 01                	add    %al,(%rcx)
  23:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
  27:	00 01                	add    %al,(%rcx)
  29:	00 00                	add    %al,(%rax)
  2b:	00 00                	add    %al,(%rax)
  2d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	00 00                	add    %al,(%rax)
   6:	00 00                	add    %al,(%rax)
   8:	01 7a 52             	add    %edi,0x52(%rdx)
   b:	00 01                	add    %al,(%rcx)
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    %ebx,(%rbx)
  11:	0c 07                	or     $0x7,%al
  13:	08 90 01 00 00 1c    	or     %dl,0x1c000001(%rax)
  19:	00 00                	add    %al,(%rax)
  1b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  1e:	00 00                	add    %al,(%rax)
  20:	00 00                	add    %al,(%rax)
  22:	00 00                	add    %al,(%rax)
  24:	57                   	push   %rdi
  25:	00 00                	add    %al,(%rax)
  27:	00 00                	add    %al,(%rax)
  29:	41 0e                	rex.B (bad) 
  2b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  31:	02 52 0c             	add    0xc(%rdx),%dl
  34:	07                   	(bad)  
  35:	08 00                	or     %al,(%rax)
	...
